"use strict";
self["webpackHotUpdatees6_async_await"](0,{

/***/ 23:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);




window.addEventListener('DOMContentLoaded', function () {
  var key = '46192b1a692f4486a0d181847232202 ';
  var days = 6;
  var city = "auto:ip";
  var url = "http://api.weatherapi.com/v1/forecast.json?key=".concat(key, "&q=").concat(city, "&days=").concat(days);
  var icon = 'cloudy';
  var iconPath = "assets/icons/".concat(icon, ".svg");
  var searchTab = document.querySelector("div.module__form");
  // searchTab.hidden = false
  var weatherTab = document.querySelector("div.module__weather");
  weatherTab.hidden = false;
  var Forecast = /*#__PURE__*/function () {
    function Forecast(el) {
      (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, Forecast);
      this.el = el;
      this.city = el.querySelector("span.city__name");
      this.temperature = el.querySelector("span.temperature__value");
      this.pressure = el.querySelector("span.pressure__value");
      this.humidity = el.querySelector("span.humidity__value");
      this.wind = el.querySelector("span.wind-speed__value");
      this.icon = el.querySelector("div.weather__icon").querySelector("img");
      this.forecast = el.querySelector("ul.weather__forecast").querySelectorAll("li");
    }
    (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Forecast, [{
      key: "updateData",
      value: function updateData(city, temp, press, humid, wind, cond, timeOfDay) {
        this.city.textContent = city;
        this.temperature.textContent = temp;
        this.pressure.textContent = press + "hPa";
        this.humidity.textContent = humid + "%";
        this.wind.textContent = wind + "m/s";
        this.icon.src = findIcon(cond, timeOfDay);
      }
    }, {
      key: "updateForecast",
      value: function updateForecast(forecastList) {
        this.forecast.forEach(function (day, index) {
          day.querySelector(".day").textContent = forecastList[index]["day"];
          day.querySelector(".temperature__value").textContent = forecastList[index]['temp'];
          day.querySelector("img").src = findIcon(forecastList[index]['condition'], "day");
        });
      }
    }]);
    return Forecast;
  }();
  var findIcon = function findIcon(code, timeOfDay) {
    var translator = {
      1000: "clear-".concat(timeOfDay),
      1003: "partly-cloudy-".concat(timeOfDay),
      1006: "cloudy",
      1009: "cloudy",
      1030: "cloudy",
      1063: "rain",
      1066: "snow",
      1069: "sleet",
      1072: "sleet",
      1087: "thunderstorm",
      1114: "snow",
      1117: "snow",
      1135: "cloudy",
      1147: "cloudy",
      1150: "rain",
      1153: "rain",
      1168: "rain",
      1171: "rain",
      1180: "rain",
      1183: "rain",
      1186: "rain",
      1189: "rain",
      1192: "rain",
      1195: "rain",
      1198: "rain",
      1201: "rain",
      1204: "sleet",
      1207: "sleet",
      1210: "snow",
      1213: "snow",
      1216: "snow",
      1219: "snow",
      1222: "snow",
      1225: "snow",
      1237: "snow",
      1240: "rain",
      1243: "rain",
      1246: "rain",
      1249: "sleet",
      1252: "sleet",
      1255: "snow",
      1258: "snow",
      1261: "sleet",
      1264: "sleet",
      1273: "thunderstorm",
      1276: "thunderstorm",
      1279: "thunderstorm",
      1282: "thunderstorm"
    };
    return "assets/icons/".concat(translator[code], ".svg");
  };
  function extractData(data) {
    console.log("in");
    var city = data['location']['name'];
    var time0fDay = dayOrNight(data['location']['localtime']);
    var condition = data['current']['condition']['code'];
    var temp = data['current']['temp_c'];
    var pressure = data['current']['pressure_mb'];
    var humidity = data['current']['humidity'];
    var wind = convertWindSpeed(data['current']['wind_kph']);
    var future = futureForecast(data['forecast']['forecastday'].slice(1));
    var weatherTab = document.querySelector("div.module__weather");
    var forecast = new Forecast(weatherTab);
    forecast.updateData(city, temp, pressure, humidity, wind, condition, time0fDay);
    forecast.updateForecast(future);
  }
  var capitalize = function capitalize(s) {
    if (typeof s !== 'string') return '';
    return s[0].toUpperCase() + s.slice(1);
  };
  var getWeekday = function getWeekday(date) {
    return capitalize(new Date(date).toLocaleString('PL', {
      weekday: 'long'
    }));
  };
  var convertWindSpeed = function convertWindSpeed(kph) {
    return Math.round(kph / 3.6 * 10) / 10;
  };
  var futureForecast = function futureForecast(arr) {
    return arr.map(function (day) {
      return {
        day: getWeekday(day['date']),
        temp: day['day']['avgtemp_c'],
        condition: day['day']['condition']['code']
      };
    });
  };
  var dayOrNight = function dayOrNight(date) {
    var hour = new Date(date).getHours();
    if (6 < hour && hour < 20) {
      return "day";
    } else {
      return "night";
    }
  };
  (function () {
    var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(url) {
      var response, data;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return fetch(url);
          case 2:
            response = _context.sent;
            _context.next = 5;
            return response.json();
          case 5:
            data = _context.sent;
            // console.log(data)
            extractData(data);
          case 7:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  })()(url);
});

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("2ae50ddedabd775fee99")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,